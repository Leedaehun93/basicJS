// TODO 사칙 연산자 :
// 사칙연산자 : +(덧셈), -(뺄샘), *(곱셈), /(나눗셈(슬래쉬)) %(나머지연산자 : 나누어서 나머지가 결과로 나옴)

// TODO 1) 덧셈
let num1 = 52 + 273; // = 325
// 결과 출력
alert(num1);

// TODO 2) 뺄셈 : 273 - 52 = 221
let num2 = 273 - 52;
alert(num2);

// TODO 3) 곱셈 : 273 * 52 = 14196
let num3 = 273 * 52
alert(num3);

// TODO 4) 나눗셈 : 273 / 52 = 5.25, ※실수(비슷한 숫자, 유사한 숫자(부동소수점법))
let num4 = 273 / 52
alert(num4);

// TODO 5) 나머지연산 : 273 % 52 = 13
let num5 = 273 % 52
alert(num5);


// TODO : 문자열 연산(더하기 === 붙이기)
// 사용법: let 변수명 = "문자열" + "문자열2" + ....;
let hello = "안녕하세요 " + " 홍길동입니다.";
// 결과 출력
alert(hello);

// TODO : 참/거짓을 표시하는 자료형(문자열(String), 숫자(Number)) : bool(boolean)(불 불린)
// 사용법 : let 변수명 = true(또는 false)
// ※ c언어나 java나 달리 변수의 자료형을 나타내는 예약어가 없음
// ※ let(const) 이용해서 변수 정의

let hello_2 = true;    // 내부적으로 bool(boolean) 된 것임
// 결과 출력
alert(hello2);

let hello3 = false;  // 내부적으로 bool(boolean) 된 것임
// 결과 출력
alert(hello3);

// TODO : 비교 연산자 :
// >=(크거나같음), <=(작거나같음),
// >(크다), <(작다),
// ==(같다), ===(같다, 좀 더 엄격하게 검사)

let age = 21;
if (age >= 19) {
  alert("성인입니다.");
}

// ※ 코딩 실수 예) 조건문 : if(hello = "안녕하세요") {} (x)
// ※ 코딩 작성 예) 조건문 : if(hello == "안녕하세요") {} (o)



// TODO : 논리 연산자 : 참/거짓을 이용해서 논리 연산함
// TODO 1) 논리 부정 : !(반대), (참이면 거짓, 거짓이면 참이 됨)
// 예) let hello = !true;
// 결과 출력
// alert(hello);

// TODO 2) 논리 곱 : && (연산 시 하나라도 거짓이면 거짓)
// ※ 리액트 코딩할 떄 굉장히 많이 나옴
// 활용 : if문 대신 논리곱을 사용할 수 있음 (고급 코딩)
// let hello1 = true && true;
// 결과 출력
// alert(hello1);   // = true
// let hello2 = true && false;
// 결과 출력
// alert(hello2);   // = tfalse

// TODO 3) 논리 합(or) : || (연산 시 하나라도 참이면 참)
// let hello = true || true;
// 결과 출력
// alert(hello);    // = true
// let hello2 = true || false;
// alert(hello2);   // = true

// TODO : 대입 연산자 : 변수, 상수에 값을 넣을 때 사용
// =(대입 연산자) vs ==, ===(비교 연산자) 구분
// let hello = "안녕하세요";
// let num = 1;

// TODO : 대입 연산자 축약형
// let x = 10; // x 의 변수에 10 값을 저장(대입연산자 = 사용)

// 예1)
// x = x + 5; // 10 + 5 => 다시 x 로 저장됨, x = 15;
// x += 5; // +(덧셈) 축약형
// alert(x); // 15 + 5 => 다시 x 로 저장됨 x = 20;

// 예2)
// x = x - 5;   // 10 - 5
// x -=5;       // -(뺄셈) 축약형
// 예3)
// x = x * 5;   // 10 * 5
// x *=5;       // *(곱셈) 축약형
// 예4)
// x = x / 5;   // 10 / 5
// x /=5;       // /(나눗셈) 축약형
// 예5)
// x = x % 5;   // 10 % 5
// x %=5;       // %(나머지 연산) 축약형

// TODO : 증감 연산자 : 1씩 증가 또는 1씩 감소함
// 사용법 : 변수++, ++변수, 변수--, --변수 등
// let x = 10;
// alert(x); // x=10
// ++x;
// alert(x); // x=11
// --x; // 1감소
// alert(x);   // x=10

// 뒤에 붙이기 : 변수++, --변수
// let y = 10;
// y++;
// alert(y); // y=11
// y--;
// alert(y); // y=10
